#!/bin/bash
# insta485db

# Stop on errors
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail
# DB="${DB:-var/insta485.sqlite3}"
# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump|random)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Parse argument.  $1 is the first argument
case $1 in
  "create")
    if [ -f var/insta485.sqlite3 ]; then
        echo "Error: database already exists"
        exit 1
    fi
    echo "+ mkdir -p var/uploads"
    mkdir -p var/uploads

    echo "+ sqlite3 var/insta485.sqlite3 < sql/schema.sql"
    sqlite3 var/insta485.sqlite3 < sql/schema.sql

    echo "+ sqlite3 var/insta485.sqlite3 < sql/data.sql"
    sqlite3 var/insta485.sqlite3 < sql/data.sql

    echo "+ cp sql/uploads/* var/uploads/"
    cp sql/uploads/* var/uploads/
    ;;

  "destroy")
    echo "+ rm -rf var/insta485.sqlite3 var/uploads"
    rm -rf var/insta485.sqlite3 var/uploads
    ;;

  "reset")
    echo "+ rm -rf var/insta485.sqlite3 var/uploads"
    rm -rf var/insta485.sqlite3 var/uploads

    echo "+ mkdir -p var/uploads"
    mkdir -p var/uploads

    echo "+ sqlite3 var/insta485.sqlite3 < sql/schema.sql"
    sqlite3 var/insta485.sqlite3 < sql/schema.sql

    echo "+ sqlite3 var/insta485.sqlite3 < sql/data.sql"
    sqlite3 var/insta485.sqlite3 < sql/data.sql

    echo "+ cp sql/uploads/* var/uploads/"
    cp sql/uploads/* var/uploads/
    ;;

  "dump")
    if [ ! -f var/insta485.sqlite3 ]; then
      echo "Error: can't find database $DB"
      echo "Try: ./bin/insta485db create"
      exit 1
    fi

    echo "+ sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM comments'"
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM comments'

    echo
    echo "+ sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM following'"
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM following'

    echo
    echo "+ sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM likes'"
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM likes'

    echo
    echo "+ sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM posts'"
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM posts'

    echo
    echo "+ sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM users'"
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM users'
    ;;

  "random")
    if [ ! -f var/insta485.sqlite3 ]; then
      echo "Error: can't find database var/insta485.sqlite3"
      echo "Try: ./bin/insta485db create"
      exit 1
    fi

    DB_FILENAME=var/insta485.sqlite3

    if command -v magick &> /dev/null; then
      IM_CMD="magick"
    elif command -v convert &> /dev/null; then
      IM_CMD="convert"
    else
      echo "Error: Neither 'magick' nor 'convert' command found."
      exit 1
    fi

    for i in `seq 1 100`; do
      FILENAME="$(uuidgen).png"
      NUMS=()
      for j in `seq 1 6`; do
          NUMS+=($(($RANDOM % 255)))
      done
      "$IM_CMD" -size 360x360 \
              radial-gradient:"rgb(${NUMS[0]},${NUMS[1]},${NUMS[2]})-rgb(${NUMS[3]},${NUMS[4]},${NUMS[5]})" \
              -pointsize 64 -fill black -gravity center -annotate 0 "image $i" "var/uploads/$FILENAME"
      OWNER="awdeorio"
      sqlite3 -echo -batch ${DB_FILENAME} "INSERT INTO posts(filename, owner) VALUES('${FILENAME}','${OWNER}');"
    done
    ;;

  *)
    usage
    exit 1
    ;;
esac